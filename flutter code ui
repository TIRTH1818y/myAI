flutter code
main.dart
////////////////////////////////////////////////////////////////////////
import 'package:flutter/material.dart';
import 'package:hello/user%20input%20handing/user_input.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: MyHomePage(
        title: '',
      ),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text("FLUTTER APP"),
      ),
      body: Container(
        child: ElevatedButton(
            style: ElevatedButton.styleFrom(
                foregroundColor: Colors.black, backgroundColor: Colors.cyan),
            onPressed: () {Navigator.push(context,MaterialPageRoute(builder: (e)=>MyApps()),);},
            child: Text("I AM A BUTTON")),
      ),
    );
  }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
userinput.dart
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() {
  runApp(const MyApps());
}

class MyApps extends StatelessWidget {
  const MyApps({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: FlutterPythonBackend(),
    );
  }
}

class FlutterPythonBackend extends StatefulWidget {

  var otpcontroller = TextEditingController();

  @override
  _FlutterPythonBackendState createState() => _FlutterPythonBackendState();
}

var promptcontroller = TextEditingController();
class _FlutterPythonBackendState extends State<FlutterPythonBackend> {
  final String baseUrl = 'http://10.0.2.2:5000/api/data'; // Use '10.0.2.2' for Android Emulator

  String _data = "No data fetched yet!";

  // Function to fetch data from the backend
  // Future<void> fetchData() async {
  //   try {
  //     final response = await http.get(Uri.parse(baseUrl));
  //     if (response.statusCode == 200) {
  //       setState(() {
  //         // _data = jsonDecode(response.body)["message"];
  //         print("//////////////////////////////////////////////////////////");
  //         print(jsonDecode(response.body));
  //         print("///////////////////////////////////////");
  //       });
  //     } else {
  //       print('Failed to fetch data: ${response.statusCode}');
  //     }
  //   } catch (error) {
  //     print('Error fetching data: $error');
  //   }
  // }

  // Function to send new data to the backend
  Future<void> sendData(String newMessage) async {
    try {
      final response = await http.post(
        Uri.parse(baseUrl),
        headers: {'Content-Type': 'application/json'},
        body: jsonEncode({"message": newMessage}),
      );
      if (response.statusCode == 201) {
        // fetchData(); // Refresh data after sending
       // print(jsonEncode(response.body));
        print((response.body));

        print('Data updated successfully');
      } else {
        print('Failed to update data: ${response.body}');
      }
    } catch (error) {
      print('Error sending data: $error');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Flutter + Python Backend')),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Text(
              'Backend Data: $_data',
              textAlign: TextAlign.center,
              style: const TextStyle(fontSize: 18),
            ),
          ),
          // ElevatedButton(
          //   onPressed: fetchData,
          //   child: const Text('Fetch Data (GET)'),
          // ),
          TextField(

            controller: promptcontroller,
            keyboardType: TextInputType.phone,
            decoration: InputDecoration(
                filled: true,
                fillColor: Colors.white70,
                hintText: "chat with AI...",
                suffixIcon: Icon(Icons.chat,color:Colors.blueAccent,),
                border: OutlineInputBorder()),
          ),
          ElevatedButton(
            onPressed: () {
             String userdata = promptcontroller.text.trim();
             sendData(userdata);
            },
            child: const Text('Send'),
          ),
        ],
      ),
    );
  }
}
///////////////////////////////////////////////////////////////////////////
android:enableOnBackInvokedCallback="true" ::manifest file
/////////////////////////////////////////////////////////////////////

